<div class="container">
	<div class="col-12">

		<div class="row rog">
			<div class="col-sm-4">
				<h2>地方タグ検索</h2>
				<h4 class="leftcolor-blue">行きたい地方をクリックしてください♪</h4>
			</div>

		<div class="col-sm-8">
		<h2>中間地点検索MAP</h2>
		<h4 class="leftcolor-blue">２箇所タップしてください♪</h4>
		<p><font color="#f4a4a4">※リロードすることで再検索できます</font></p>
		<!-- form_withはデフォルトでremote: trueの挙動になります -->

		<div id="map">
		</div>
        <div id="distance"></div>
		<style>
			#map{
				height: 600px;
				width: 800px;
				}
		</style>

		<script>
  			var mapInstance; //この変数はmap.js.erbでも使うのでタイプミスに注意
			var mk1, mk2, distance;
			const perKm = 1.60934;
			function initMap(){
			  mapInstance = new google.maps.Map(document.getElementById('map'), {
			  center: {lat: 35.681236, lng: 139.767125},
			  zoom: 5
			  });
			  // クリックイベントを追加
			  mapInstance.addListener('click', function(e) {
			    getClickLatLng(e.latLng, mapInstance);
			  });
			}
			function getClickLatLng(lat_lng, map) {
			    // // 座標を表示
			    // document.getElementById('lat').textContent = lat_lng.lat();
			    // document.getElementById('lng').textContent = lat_lng.lng();
			    // マーカーを設置
			    // ２箇所以上ピンたてできないようにif文で分岐
			    if (mk1 && mk2) {
			      return;
			    }
			    var marker = new google.maps.Marker({
			      position: lat_lng,
			      map: map
			    });
			    if (!mk1) {
			      mk1 = marker;
			    } else
			    if (mk1 && !mk2) {
			      mk2 = marker;
			      distance = haversine_distance();
			      document.getElementById('distance').textContent = ( parseFloat(distance) * perKm ) /2;
			      middle_point = middle_distance();
			      console.log(middle_point)
			    }
			    // 座標の中心をずらす
			    // http://syncer.jp/google-maps-javascript-api-matome/map/method/panTo/
			    map.panTo(lat_lng);
			}
			function haversine_distance() {
			    var R = 3958.8;
			    var rlat1 = mk1.position.lat() * (Math.PI/180);
			    var rlat2 = mk2.position.lat() * (Math.PI/180);
			    var difflat = rlat2-rlat1;
			    var difflon = (mk2.position.lng()-mk1.position.lng())
			                * (Math.PI/180);
			    var d = 2 * R
			    * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)
			    +Math.cos(rlat1)*Math.cos(rlat2)
			    *Math.sin(difflon/2)*Math.sin(difflon/2)));
			    return d;
			  }
			  function middle_distance(){
			  	var middle_lat = (mk1.position.lat() + mk2.position.lat()) / 2
				var middle_lng = (mk1.position.lng() + mk2.position.lng()) / 2
				// return [middle_lat, middle_lng]
				return {"lat": middle_lat, "lng": middle_lng}
			  }



		</script>
		<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GoogleMap_API'] %>&callback=initMap" async defer></script>
		</div>
		</div>
	</div>
</div>