<link href="https://fonts.googleapis.com/css2?family=Kosugi+Maru&display=swap" rel="stylesheet">

<div class="container">
	<div class="col-12">
		<h5 id="notice" class="text-center"><font color="#FF3366"><%= notice %></font></h5>
		<% unless user_signed_in? %>
			<h3 class="hello text-center"><font color="#f4a4a4">初めての方は「APEREとは」から</font></h3>
		<% else %>
			<h3 class="hello text-center"><font color="#f4a4a4">こんにちは！<%= @user.name %>さん</font></h3>
		<% end %>

		<div class="row rog">
			<div class="col-sm-4">
				<h2 class="hello">地方タグ検索</h2>
				<h4 class="leftcolor-blue">行きたい地方をクリックしてください♪</h4>
				<table>
				<tr>
					<th>タグ付け検索</th>
				</tr>
				<tr>
					<td>
						<% @regions.each do |tag| %>
			  			<%= link_to tag, posts_path(tag_name: tag), class: "text-white btn-sticky" %>
						<% end %>
					</td>
				</tr>
			</table>
			</div>

		<div class="col-sm-8">
		<h2 class="hello">中間地点検索MAP</h2>
		<h4 class="leftcolor-blue">２箇所タップしてください♪</h4>
		<p><font color="#f4a4a4">※左上のロゴをクリックすることで再検索できます</font></p>
		<!-- form_withはデフォルトでremote: trueの挙動になります -->

		<div id="map"></div>
		<table>
			<tr>
				<td id="distance">ここに、直線距離（Km)が表示されます。</td>
			</tr>
			<tr>
				<td id="addressOutput">ここに、中間地点の住所が表示されます。</td>
			</tr>
		</table>
		<div id="middle_lat"></div>
		<div id="middle_lng"></div>

		<style>
			#map{
				height: 600px;
				width: 800px;
				}
		</style>

		<script>
  			var mapInstance; //この変数はmap.js.erbでも使うのでタイプミスに注意
			var mk1, mk2, distance;
			const perKm = 1.60934;
			function initMap(){
			  mapInstance = new google.maps.Map(document.getElementById('map'), {
			  center: {lat: 35.681236, lng: 139.767125},
			  zoom: 6
			  });
			  // クリックイベントを追加
			  mapInstance.addListener('click', function(e) {
			    getClickLatLng(e.latLng, mapInstance);
			  });
			}
			function getClickLatLng(lat_lng, map) {
			    // // 座標を表示
			    // document.getElementById('lat').textContent = lat_lng.lat();
			    // document.getElementById('lng').textContent = lat_lng.lng();
			    // マーカーを設置
			    // ２箇所以上ピンたてできないようにif文で分岐
			    if (mk1 && mk2) {
			      return;
			    }
			    var marker = new google.maps.Marker({
			      position: lat_lng,
			      map: map
			    });
			    if (!mk1) {
			      mk1 = marker;
			    } else
			    if (mk1 && !mk2) {
			      mk2 = marker;
			      distance = haversine_distance();
			      document.getElementById('distance').textContent = ( parseFloat(distance) * perKm );
			      middle_point = middle_distance();
			      console.log(middle_point)
			      getAddress()
			    }
			    // 座標の中心をずらす
			    // http://syncer.jp/google-maps-javascript-api-matome/map/method/panTo/
			    map.panTo(lat_lng);
			}
			function haversine_distance() {
			    var R = 3958.8;
			    var rlat1 = mk1.position.lat() * (Math.PI/180);
			    var rlat2 = mk2.position.lat() * (Math.PI/180);
			    var difflat = rlat2-rlat1;
			    var difflon = (mk2.position.lng()-mk1.position.lng())
			                * (Math.PI/180);
			    var d = 2 * R
			    * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)
			    +Math.cos(rlat1)*Math.cos(rlat2)
			    *Math.sin(difflon/2)*Math.sin(difflon/2)));
			    return d;
			  }
			  function middle_distance(){
			  	$('#middle_lat').val((mk1.position.lat() + mk2.position.lat()) / 2)
				$('#middle_lng').val((mk1.position.lng() + mk2.position.lng()) / 2)
				// return [middle_lat, middle_lng]
				return {"lat": middle_lat, "lng": middle_lng};
			  }




			  function getAddress(){

			  //入力した緯度・経度を取得します。
			  var middle_lat = document.getElementById('middle_lat').value;
			  var middle_lng = document.getElementById('middle_lng').value;

			  //緯度・経度をLatLngクラスに変換します。
			  var latLngInput = new google.maps.LatLng(middle_lat, middle_lng);

			  //Google Maps APIのジオコーダを使います。
			  var geocoder = new google.maps.Geocoder();

			  //ジオコーダのgeocodeを実行します。
			  //第１引数のリクエストパラメータにlatLngプロパティを設定します。
			  //第２引数はコールバック関数です。取得結果を処理します。
			  geocoder.geocode(
			    {
			      latLng: latLngInput
			    },
			    function(results, status) {

			      var address = "";

			      if (status == google.maps.GeocoderStatus.OK) {
			      //取得が成功した場合

			        //住所を取得します。
			        address = results[0].formatted_address;

			      } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
			        alert("住所が見つかりませんでした。");
			      } else if (status == google.maps.GeocoderStatus.ERROR) {
			        alert("サーバ接続に失敗しました。");
			      } else if (status == google.maps.GeocoderStatus.INVALID_REQUEST) {
			        alert("リクエストが無効でした。");
			      } else if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
			        alert("リクエストの制限回数を超えました。");
			      } else if (status == google.maps.GeocoderStatus.REQUEST_DENIED) {
			        alert("サービスが使えない状態でした。");
			      } else if (status == google.maps.GeocoderStatus.UNKNOWN_ERROR) {
			        alert("原因不明のエラーが発生しました。");
			      }

			      //住所の結果表示をします。
			      document.getElementById('addressOutput').textContent = address;
			    });

				}


		</script>
		<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GoogleMap_API'] %>&callback=initMap" async defer></script>
		</div>
		</div>
	</div>
</div>